# Generated by Django 3.0.2 on 2020-02-12 18:40

import dining_room.models.website
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('dining_room', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actions',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Actions',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('dining_room.user',),
            managers=[
                ('objects', dining_room.models.website.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='certain_of_actions',
        ),
        migrations.RemoveField(
            model_name='user',
            name='could_not_identify_problems',
        ),
        migrations.RemoveField(
            model_name='user',
            name='identify_problems_in_future',
        ),
        migrations.RemoveField(
            model_name='user',
            name='rely_on_system_in_future',
        ),
        migrations.RemoveField(
            model_name='user',
            name='system_helped_understand',
        ),
        migrations.RemoveField(
            model_name='user',
            name='system_was_responsible',
        ),
        migrations.RemoveField(
            model_name='user',
            name='user_was_competent',
        ),
        migrations.AddField(
            model_name='studymanagement',
            name='max_ax_suggestions',
            field=models.IntegerField(default=1, help_text='Max number of action suggestions to display', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='studymanagement',
            name='max_dx_suggestions',
            field=models.IntegerField(default=1, help_text='Max number of diagnosis suggestions to display', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='studymanagement',
            name='max_test_attempts',
            field=models.IntegerField(default=5, help_text='Maximum number of times a user can fail the knowledge test'),
        ),
        migrations.AddField(
            model_name='studymanagement',
            name='pad_suggestions',
            field=models.BooleanField(default=False, help_text="Pad the suggestions if we don't have enough"),
        ),
        migrations.AddField(
            model_name='user',
            name='actions_were_not_enough',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I did not have access to all the actions that I needed in order to help the robot.'),
        ),
        migrations.AddField(
            model_name='user',
            name='amt_worker_id',
            field=models.CharField(blank=True, max_length=80, null=True, verbose_name='Worker ID'),
        ),
        migrations.AddField(
            model_name='user',
            name='could_identify_problems',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name="I could always identify the problem(s) affecting the robot's ability to achieve its goal."),
        ),
        migrations.AddField(
            model_name='user',
            name='study_management',
            field=models.ForeignKey(blank=True, default=dining_room.models.website.StudyManagement.get_default_pk, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dining_room.StudyManagement'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_awkward',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I found the system awkward to use.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_confident',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I felt very confident using the system.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_easy_to_use',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I thought the system was easy to use.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_inconsistency',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I thought there was too much inconsistency in the system.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_learn_a_lot',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I needed to learn a lot of things before I could get going with this system.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_like_to_use_frequently',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I think that I would like to use this system frequently.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_most_people_can_learn',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I would imagine that most people would learn to use this system very quickly.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_technical',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I think that I would need the support of a technical person to be able to use this system.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_unnecessarily_complex',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I found the system unnecessarily complex.'),
        ),
        migrations.AddField(
            model_name='user',
            name='sus_well_integrated',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I found the various functions in this system were well integrated.'),
        ),
        migrations.AlterField(
            model_name='studymanagement',
            name='data_directory',
            field=models.CharField(help_text="Data directory for user data within '/DiningRoom_IsolationCYOA/data'", max_length=50),
        ),
        migrations.AlterField(
            model_name='user',
            name='comments',
            field=models.TextField(blank=True, null=True, verbose_name='Additional comments or feedback about the system'),
        ),
        migrations.AlterField(
            model_name='user',
            name='information_was_enough',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I had access to sufficient information in order to help the robot.'),
        ),
        migrations.AlterField(
            model_name='user',
            name='not_sure_how_to_help',
            field=models.IntegerField(blank=True, choices=[(0, 'Strongly Disagree'), (1, 'Disagree'), (2, 'Neutral'), (3, 'Agree'), (4, 'Strongly Agree')], null=True, verbose_name='I was not always sure how to help the robot with the problem(s) that I identified.'),
        ),
        migrations.CreateModel(
            name='StudyAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_timestamp', models.DateTimeField()),
                ('end_timestamp', models.DateTimeField()),
                ('start_state', models.CharField(max_length=80)),
                ('diagnoses', multiselectfield.db.fields.MultiSelectField(choices=[('lost', 'The robot is lost'), ('cannot_move', 'The robot is stuck and cannot move to a location'), ('base_collision', 'The robot has collided with an object'), ('path_blocked', "The robot's path is blocked"), ('cannot_pick', 'The cup cannot be picked up'), ('cannot_see', 'The cup is not visible'), ('different_location', 'The cup is not where it should be'), ('object_fell', "The object fell out of the robot's hand"), ('battery_low', 'The battery is low'), ('video_problem', 'There is a problem with the camera'), ('none', 'There is no problem')], max_length=129)),
                ('diagnosis_certainty', models.IntegerField()),
                ('action', models.CharField(choices=[('at_c', "Update robot's location belief to: Couch"), ('at_dt', "Update robot's location belief to:  Dining Table"), ('at_kc', "Update robot's location belief to:  Kitchen Counter"), ('go_to_c', 'Navigate to Couch'), ('go_to_dt', 'Navigate to Dining Table'), ('go_to_kc', 'Navigate to Kitchen Counter'), ('remove_obstacle', 'Remove the obstacle blocking navigation'), ('out_of_collision', 'Move away from a collision'), ('look_at_c', 'Look at Couch'), ('look_at_dt', 'Look at Dining Table'), ('look_at_kc', 'Look at Kitchen Counter'), ('pick_bowl', 'Pick up the Bowl'), ('pick_jug', 'Pick up the Jug'), ('pick_mug', 'Pick up the Cup'), ('place', 'Put away held object'), ('restart_video', 'Restart the camera'), ('find_charger', 'Find the charger and navigate to it')], max_length=20)),
                ('next_state', models.CharField(blank=True, max_length=80, null=True)),
                ('video_loaded_time', models.DateTimeField()),
                ('video_stop_time', models.DateTimeField()),
                ('dx_selected_time', models.DateTimeField()),
                ('dx_confirmed_time', models.DateTimeField()),
                ('ax_selected_time', models.DateTimeField()),
                ('browser_refreshed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'study action',
                'verbose_name_plural': 'study actions',
            },
        ),
    ]
